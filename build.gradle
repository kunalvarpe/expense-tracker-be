plugins {
	id 'java'
	id 'org.springframework.boot' version '3.0.4'
	id 'io.spring.dependency-management' version '1.1.0'
}

group = 'io.kunalvarpe'
version = '0.0.1-SNAPSHOT'

java {
	sourceCompatibility = '21'
	toolchain {
		languageVersion = JavaLanguageVersion.of(21)
	}
}
repositories {
	mavenCentral()
}

ext {
	bootStrapBersion = '4.2.1'
	webjarsJqueryVersion = '3.3.1-1'
	webjarsJqueryUiVersion = '1.11.4'
	set('testcontainersVersion', "1.18.0")
}


dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-web'
	implementation 'org.springframework.boot:spring-boot-starter-validation'
	implementation 'org.springframework.boot:spring-boot-starter-thymeleaf'
	implementation 'org.springframework.boot:spring-boot-starter-data-jdbc'
	// DB
	runtimeOnly 'org.postgresql:postgresql'
	runtimeOnly 'org.flywaydb:flyway-core'

	developmentOnly 'org.springframework.boot:spring-boot-devtools'

	//Test
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.testcontainers:junit-jupiter'
	testImplementation "org.testcontainers:postgresql"
	testImplementation 'io.rest-assured:rest-assured'
}

dependencyManagement {
	imports {
		mavenBom "org.testcontainers:testcontainers-bom:${testcontainersVersion}"
	}
}

test {
	useJUnitPlatform()
	testLogging {
		events = ["PASSED", "FAILED", "SKIPPED"]
		showStandardStreams = true
		exceptionFormat = "full"
	}
}

tasks.register('buildFrontend') {
	description "Build tailwind css"
	doLast {
		def npmCommand = 'npm'
		if (isFamily(FAMILY_WINDOWS)) {
			npmCommand = 'npm.cmd'
		}
		println "Using command : ${npmCommand}"
		exec {
			workingDir "${projectDir}/src/main/frontend"
			commandLine npmCommand, 'install'
			commandLine npmCommand, 'run', 'build'
		}
		println "Frontend module with tailwind css built!"
	}
}

tasks.named("build") {
	finalizedBy("buildFrontend")
}

tasks.register('frontEndDev') {
	description "Watch for the changes in frontend module e.g. tailwind css"
	doLast {
		def npmCommand = 'npm'
		if (isFamily(FAMILY_WINDOWS)) {
			npmCommand = 'npm.cmd'
		}
		println "Using command : ${npmCommand}"
		exec {
			workingDir "${projectDir}/src/main/frontend"
			commandLine npmCommand, 'install'
			commandLine npmCommand, 'run', 'watch', '--', '-o', "../resources/static/main.css"
		}
		println "Frontend module with tailwind css built!"
	}
}

tasks.named("bootRun") {
	dependsOn 'frontEndDev'
}

